MPTR1	EQU	&AC	; Start address of file
MPTR2	EQU	&AE	; End address/Workspace address
TSPEED	EQU	&B0	; Baud rate number
MPTR3	EQU	&BB	; Filename PRT
MFLEN	EQU	&B7	; Length of filename
MCONTRL	EQU	&90	; Control byte
MCHECKSUM	EQU	&9B	; EOR checksum
MBYTE	EQU	&95	; Current byte being formed in int
MLVFLAG	EQU	&93	; Load/Verify flag
MINDEX	EQU	&9C	; Index counter for interrupt driver
INTERLOCK	EQU	&C0	; Cassette motor interlock

;MPTR1	EQU	&EC	; Start address of file
;MPTR2	EQU	&EE	; End address/Workspace address
;TSPEED	EQU	&E0	; Baud rate number
;MPTR3	EQU	&E2	; Filename PRT
;MFLEN	EQU	&E4	; Length of filename
;MCONTRL	EQU	&D0	; Control byte
;MCHECKSUM	EQU	&DB	; EOR checksum
;MBYTE	EQU	&D5	; Current byte being formed in int
;MLVFLAG	EQU	&D3	; Load/Verify flag
;MINDEX	EQU	&DC	; Index counter for interrupt driver
;INTERLOCK	EQU	&F0	; Cassette motor interlock

	LDA	#2	; all same size
	STA	MFLEN	; file name length
	LDA	LEVEL
	BNE	OTHERL
	;LDA	#%00011000	; MULTICOLOUR 38 COLS 3 IN X SCROLL
	;STA	VICCR2
	LDA	#%10010101	; &8000 to &BFFF
	STA	BANK
	JSR	PLOTTEXT	; fire print
	DB	1,12,8
	DB	"REWIND TO START PRESS FIRE"
	DB	255
	LDA	#%00011011	; 25 ROWS 3 Y SCROLL
	STA	VICCR1
LETGO	JSR	JOYGET
	LDA	FIRE
	BNE	LETGO
!LOOP	JSR	JOYGET
	LDA	FIRE
	BEQ	!LOOP
	LDA	#0	;%00011011	; 25 ROWS 3 Y SCROLL
	STA	VICCR1	; blank screen

	LDA	LEVEL
OTHERL	TAY		; music index
	CLC
	ADC	#65
	STA	LEVEL_FILE+1
	STA	CHAR_FILE+1
	LDA	MUSIC_ASC,Y	; Need a music file ?
	BEQ	NOTREQUIRED
	STA	MUSIC_FILE+1
	LDA	#>MUSIC_FILE
	STA	MPTR3
	LDA	#<MUSIC_FILE
	STA	MPTR3+1
	LDA	#&41
	JSR	FILELOAD
NOTREQUIRED
	LDA	#>LEVEL_FILE
	STA	MPTR3
	LDA	#<LEVEL_FILE
	STA	MPTR3+1
	LDA	#&41
	JSR	FILELOAD
	LDA	#>CHAR_FILE
	STA	MPTR3
	LDA	#<CHAR_FILE
	STA	MPTR3+1
	LDA	#&41
	JSR	FILELOAD

MEMORY	EQU	&FC
MSTORE	EQU	&FE

	; Unpack Compressed Data
	LDA	#<TILEMAP
	STA	MEMORY+1	; high
	LDA	#>TILEMAP
	STA	MEMORY+0	; low
	LDA	&B500-1
	STA	MSTORE+1	; high
	LDA	&B500-2
	STA	MSTORE+0	; low
	LDY	#0
UN_CRUNCH	LDA	(MSTORE),Y	; first byte
	BNE	ALL_GO	; 0 end of data
	LDA	LEVEL_DATA	; Byte in chatser
	STA	LEVEL_BYTE	; to know if monster level
	AND	#%00000010	; Is this a monster level
	BEQ	SCT	; nope a scroller / or battle
	LDA	#>OTHER_CODE
	STA	MPTR3
	LDA	#<OTHER_CODE
	STA	MPTR3+1
	LDA	#&41
	JSR	FILELOAD
SCT	LDA	#0	; blacken border ok
	STA	BORDER	; OK
	LDA	#%00100101
	STA	R6510
	RTS

ALL_GO	BMI	SPECIAL_BYTE
	TAX		; amount of none repeat bytes
	JSR	BUMP_STORE	; advance on store
UN_LOOP	LDA	(MSTORE),Y
	STA	(MEMORY),Y
	JSR	BUMP_STORE	; advance pack memory
	JSR	BUMP_MEMORY	; advance store
	DEX
	BPL	UN_LOOP	; all of it
	JMP	UN_CRUNCH	; all data	

SPECIAL_BYTE
	AND	#%01111111	; get amount of duplicates
	TAX		; amount
	JSR	BUMP_STORE	; advance on store
	LDA	(MSTORE),Y	; get byte that is repeated
	STA	STORES+1	; live!
	JSR	BUMP_STORE	; past last byte
STORES	LDA	#255	; this byte
	STA	(MEMORY),Y	; save out
	JSR	BUMP_MEMORY	; advance
	DEX
	BNE	STORES	; all repeats
	JMP	UN_CRUNCH	; all data

	; Advance one on Pack store
BUMP_STORE	INC	MSTORE	; low + 1
	BNE	!NO_CARRY	; overflow 
	INC	MSTORE+1	; high + 1
!NO_CARRY	RTS

	; Advance one on Memory store
BUMP_MEMORY
	INC	MEMORY	; low + 1
	BNE	!NO_CARRY	; overflow 
	INC	MEMORY+1	; high + 1
!NO_CARRY	RTS

	; Music number ASCII byte for file name
	; 1 49 , 2 50 , 3 51 , 7 55 , 65 A
MUSIC_ASC	DB	49,50,51,51,00,00,49	; 1 2 3 7 A
	DB	51,51,50,00,00,65,49
	DB	49,00,00,55,00,00,00
	DB	00,00,65,55,50,00,00

	; In order of loaded
MUSIC_FILE	DB	"M1",0	; Music file number
LEVEL_FILE	DB	"LA",0	; Scroller tile etc data
CHAR_FILE	DB	"CA",0	; character number
OTHER_CODE	DB	"OT",0	; code goes with monsters

FILELOAD	SEI
	STA	MLVFLAG
	STX	XREG+1	;&112E
	STY	YREG+1	;&1130
	LDA	1
	AND	#&DC
	ORA	#1
	STA	1
	LDA	#0
	STA	BRAN+1	;&108C
	LDA	#&7F
	STA	&DC0D
	LDA	#&90
	STA	&DC0D
	LDA	JJUMP+1	;&1069
	STA	&FFFE
	LDA	JJUMP+2	;&106A
	STA	&FFFF
	LDA	#&FE
	STA	&DC04
	LDA	#1
	STA	&DC05
	LDA	#0
	STA	MCONTRL
	CLI
	LDA	MLVFLAG
	AND	#2
	BNE	RET
WAT	LDA	MCONTRL
	CMP	#&FD
	BCC	WAT
GOLOAD	LDA	#&7F
	STA	&DC0D
	LDA	1
	ORA	#&20
	STA	INTERLOCK
	STA	1
	LDA	MCONTRL
	CMP	#&FE
	LDX	MPTR1
	LDY	MPTR1+1	;&AD
RET	RTS
NOTME	STA	&D019
	CLI
	PLA
	RTI
JJUMP	JMP	IRC	;&106b
IRC	PHA
	LDA	&D019
	BMI	NOTME	;&1060
	LDA	&DC0D
	LSR	A
	LDA	#&11
	STA	&DC0E
	BIT	MLVFLAG
	BVC	MISBORD	;&1086
	LDA	&D020
	EOR	#5
	STA	&D020
MISBORD	LDA	&DC0D
	LDA	#0
BRAN	BEQ	NEXTLI	;&108D
NEXTLI	ROL	MBYTE
	LDA	MBYTE
	CMP	#&0F
	BNE	BAKRET	;&10A3
	LDA	#&18
	STA	BRAN+1	;&108C
	LDA	#0
	STA	BRAN2+1	;&10BA
	LDA	#1
	STA	MBYTE
BAKRET	PLA
	RTI
	ROL	MBYTE
	BCC	BAKRET	;&10A3
	LDA	MBYTE
	EOR	MCHECKSUM
	STA	MCHECKSUM
	TXA
	PHA
	TYA
	PHA
	LDA	MBYTE
	LDX	#1
	STX	MBYTE
BRAN2	BCS	NEXLIN2	;&10BB
NEXLIN2	CMP	#&0F
	BEQ	SETIT	;&10C8
RESBAK	LDA	#0
	STA	BRAN+1	;&108C
	LDA	#&FF
	STA	MBYTE
SETIT	LDA	#&1E
	STA	BRAN2+1	;&10BA
RESTREG	PLA
	TAY
	PLA
	TAX
	PLA
	RTI
	JMP	STORE	;&1157
	JMP	ENDCH	;&1181
	CMP	#&0F
	BEQ	RESTREG	;&10CD
	CMP	#&AA
	BNE	RESBAK	;&10BF
	LDA	#&34
	STA	BRAN2+1	;&10BA
	LDA	#0
	STA	MINDEX
	STA	MCHECKSUM
	JMP	RESTREG	;&10CD
	LDY	MINDEX
	CPY	MFLEN
	BCS	YCOMP	;&10F9
	CMP	(MPTR3),Y
	BNE	RESBAK	;&10BF
YCOMP	CPY	#&16
	BCS	WLEFT	;&1109
	CPY	#&10
	BCC	SKSTOR	;&1104
	STA	MINDEX,Y
SKSTOR	INY
	STY	MINDEX
	BNE	RESTREG	;&10CD
WLEFT	LDA	MCHECKSUM
	BNE	INITC	;&1185
	LDA	TSPEED+1	;&B1
	LSR	A
	PHA
	LDA	TSPEED
	ROR	A
	CLC
	ADC	TSPEED
	STA	&DC04
	PLA
	ADC	TSPEED+1	;&B1
	STA	&DC05
	LDA	#&6D
	STA	BRAN2+1	;&10BA
	JMP	RESTREG	;&10CD
	LDA	MLVFLAG
	LSR	A
	BCS	VERF	;&1135
XREG	LDX	#0
YREG	LDY	#0
	STX	MPTR1
	STY	MPTR1+1	;&AD
VERF	LDY	#0
	LDA	MPTR2+1	;&AF
	BNE	DECADR	;&1142
	LDY	MPTR2
	STA	MPTR2
	JMP	NODEC	;&1144
DECADR	DEC	MPTR2+1	;&AF
NODEC	STY	MINDEX
	LDA	#&18
	STA	BRAN2+1	;&10BA
	INC	MCONTRL
	BIT	MLVFLAG
	BVC	GOBAK	;&1154
	INC	&D020
GOBAK	JMP	RESTREG	;&10CD
STORE	LDX	1
	LDY	#4
	STY	1
	LDY	#0
	BIT	MLVFLAG
	BMI	VERIFY	;&1179
	STA	(MPTR1),Y
NOLOER	STX	1
	INC	MPTR1
	BNE	HIGB	;&116D
	INC	MPTR1+1	;&AD
HIGB	DEC	MINDEX
	BNE	GOBAK	;&1154
	LDA	#&1B
	STA	BRAN2+1	;&10BA
	JMP	RESTREG	;&10CD
VERIFY	CMP	(MPTR1),Y
	BEQ	NOLOER	;&1165
	STX	1
	BNE	INITC	;&1185
ENDCH	LDA	MCHECKSUM
	BEQ	REEND	;&1191
INITC	LDA	#&FF
SE1	STA	MCONTRL
	LDA	#&16
	STA	BRAN+1	;&108C
	JMP	RESTREG	;&10CD
REEND	LDA	MPTR2
	ORA	MPTR2+1	;&AF
	BNE	VERF	;&1135
	LDA	#&FD
	BNE	SE1	;&1187


!OLDORG	ORG	$7780
	JSR	CLS	; wipe out screen
	LDA	#0
	STA	BORDER
	STA	COLOUR0
	LDY	#63
!CLSPRITES	STA	TEXTSPRS,Y
	STA	TEXTSPRS+64,Y
	STA	TEXTSPRS+128,Y
	STA	TEXTSPRS+192,Y
	STA	TEXTSPRS+256,Y
	STA	TEXTSPRS+256+64,Y	; just as well
	DEY
	BPL	!CLSPRITES
	LDA	#%00011000	; MULTICOLOUR 38 COLS 3 IN X SCROLL
	STA	VICCR2
	LDA	#%11011110	; CHARACTER AND SCREEN SPRERS
	STA	VICMCR
	LDA	#%10010101	; &8000 to &BFFF
	STA	BANK
	JSR	PLOTTEXT	; fire print
	DB	1,12,9
	DB	"PLEASE TURN TAPE OVER"
	DB	255
	LDA	#%00011011	; 25 ROWS 3 Y SCROLL
	STA	VICCR1
!LOOP	JSR	JOYGET
	LDA	FIRE
	BEQ	!LOOP
	JMP	START_CODE

	ORG	!OLDORG

